<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cqupt.teachsso.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="cn.cqupt.teachsso.model.Student" >
    <id column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="student_no" property="studentNo" jdbcType="VARCHAR" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="student_pswd" property="studentPswd" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="colledge" property="colledge" jdbcType="VARCHAR" />
    <result column="passed" property="passed" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="exam_times" property="examTimes" jdbcType="INTEGER" />
    <result column="exam_time" property="examTime" jdbcType="TIMESTAMP" />
    <result column="is_cheated" property="isCheated" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    student_id, student_no, student_name, student_pswd, major, colledge, passed, score, 
    exam_times, exam_time, is_cheated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.cqupt.teachsso.model.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.cqupt.teachsso.model.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.cqupt.teachsso.model.Student" >
    insert into student (student_id, student_no, student_name, 
      student_pswd, major, colledge, 
      passed, score, exam_times, 
      exam_time, is_cheated)
    values (#{studentId,jdbcType=INTEGER}, #{studentNo,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{studentPswd,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{colledge,jdbcType=VARCHAR}, 
      #{passed,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, #{examTimes,jdbcType=INTEGER}, 
      #{examTime,jdbcType=TIMESTAMP}, #{isCheated,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.cqupt.teachsso.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentNo != null" >
        student_no,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="studentPswd != null" >
        student_pswd,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="colledge != null" >
        colledge,
      </if>
      <if test="passed != null" >
        passed,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="examTimes != null" >
        exam_times,
      </if>
      <if test="examTime != null" >
        exam_time,
      </if>
      <if test="isCheated != null" >
        is_cheated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentNo != null" >
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentPswd != null" >
        #{studentPswd,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="colledge != null" >
        #{colledge,jdbcType=VARCHAR},
      </if>
      <if test="passed != null" >
        #{passed,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="examTimes != null" >
        #{examTimes,jdbcType=INTEGER},
      </if>
      <if test="examTime != null" >
        #{examTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCheated != null" >
        #{isCheated,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.cqupt.teachsso.model.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.studentNo != null" >
        student_no = #{record.studentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentPswd != null" >
        student_pswd = #{record.studentPswd,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.colledge != null" >
        colledge = #{record.colledge,jdbcType=VARCHAR},
      </if>
      <if test="record.passed != null" >
        passed = #{record.passed,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.examTimes != null" >
        exam_times = #{record.examTimes,jdbcType=INTEGER},
      </if>
      <if test="record.examTime != null" >
        exam_time = #{record.examTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isCheated != null" >
        is_cheated = #{record.isCheated,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set student_id = #{record.studentId,jdbcType=INTEGER},
      student_no = #{record.studentNo,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_pswd = #{record.studentPswd,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      colledge = #{record.colledge,jdbcType=VARCHAR},
      passed = #{record.passed,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE},
      exam_times = #{record.examTimes,jdbcType=INTEGER},
      exam_time = #{record.examTime,jdbcType=TIMESTAMP},
      is_cheated = #{record.isCheated,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cqupt.teachsso.model.Student" >
    update student
    <set >
      <if test="studentNo != null" >
        student_no = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentPswd != null" >
        student_pswd = #{studentPswd,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="colledge != null" >
        colledge = #{colledge,jdbcType=VARCHAR},
      </if>
      <if test="passed != null" >
        passed = #{passed,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="examTimes != null" >
        exam_times = #{examTimes,jdbcType=INTEGER},
      </if>
      <if test="examTime != null" >
        exam_time = #{examTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isCheated != null" >
        is_cheated = #{isCheated,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cqupt.teachsso.model.Student" >
    update student
    set student_no = #{studentNo,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_pswd = #{studentPswd,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      colledge = #{colledge,jdbcType=VARCHAR},
      passed = #{passed,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      exam_times = #{examTimes,jdbcType=INTEGER},
      exam_time = #{examTime,jdbcType=TIMESTAMP},
      is_cheated = #{isCheated,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
</mapper>